# Folder: handlers/commands.py
# -------------------------
import logging                         # ‚Üê 1. –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º logging

from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from db.user_queries import get_user, create_user, update_user_state

logger = logging.getLogger(__name__)   # ‚Üê 2. —Å–æ–∑–¥–∞—ë–º –ª–æ–≥–≥–µ—Ä

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_id = update.effective_user.id
        logger.info("‚ñ∂Ô∏è /start for %s", user_id)

        user = await get_user(user_id)          # ‚Üê –∑–¥–µ—Å—å —á–∞—â–µ –≤—Å–µ–≥–æ –ø–∞–¥–∞–µ—Ç
    except Exception:
        logger.exception("DB read failed")
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ë–î. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return

    if user:
        nickname = user.get("nickname") or "–¥—Ä—É–≥"
        await update.message.reply_text(
            f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {nickname}!",
            reply_markup=ReplyKeyboardMarkup([["–ù–∞—á–∞—Ç—å"]], resize_keyboard=True)
        )
    else:
        await create_user(user_id)
        await update_user_state(user_id, "nickname")
        await update.message.reply_text(
            "üëã –ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏ —Å–≤–æ–π –Ω–∏–∫ (–∏–º—è, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ç–µ–±—è —É–≤–∏–¥–∏—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫):"
        )
        
    logger.info(f"‚úÖ /start REPLIED for user {user_id}")

