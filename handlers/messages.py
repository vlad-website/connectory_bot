from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from db.user_queries import update_user_theme, update_user_sub, update_user_state
from core.topics import TOPICS
from db.user_queries import get_user
from core.matchmaking import add_to_queue, is_in_chat
from core.chat_control import end_dialog

async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print("üí¨ MSG:", update.message.text)      # ‚Üê –≤—Ä–µ–º–µ–Ω–Ω–æ
    user_id = update.effective_user.id
    user = await get_user(user_id)
    text = update.message.text.strip()

    if not user:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start.")
        return

    state = user["state"]

    if state == "nickname":
    # 1. —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∏–∫
        await update_user_nickname(user_id, text)

    # 2. –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∏–∫ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø–∏—Å–∞–Ω
    user_after = await get_user(user_id)
    logger.debug("After nickname update: %s", user_after)   # –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å nickname != None

    # 3. –ø–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –≤—ã–±–æ—Ä—É –ø–æ–ª–∞
    await update_user_state(user_id, "gender")

    await update.message.reply_text("–£–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª (–ú/–ñ):")
    return  # ‚Üê –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–ª—å–Ω–µ–π—à–∏–π –∫–æ–¥
    
    elif state == "gender":
        if text.lower() in ("–º", "–º—É–∂", "–º—É–∂—Å–∫–æ–π"):
            gender = "–ú"
        elif text.lower() in ("–∂", "–∂–µ–Ω", "–∂–µ–Ω—Å–∫–∏–π"):
            gender = "–ñ"
        else:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ –ø–æ–ª ‚Äî –ú –∏–ª–∏ –ñ:")
            return
        await update_user_gender(user_id, gender)
        await update_user_state(user_id, "theme")

        # –í—ã–±–æ—Ä —Ç–µ–º—ã
        keyboard = [[t] for t in TOPICS.keys()]
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–±—è —Ç–µ–º—É:",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )

    elif state == "theme":
        if text not in TOPICS:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —Ç–µ–º—É –∏–∑ —Å–ø–∏—Å–∫–∞.")
            return
        await update_user_theme(user_id, text)
        await update_user_state(user_id, "sub")

        # –ü–æ–¥—Ç–µ–º—ã + "–ª—é–±–∞—è"
        subtopics = TOPICS[text] + ["–õ—é–±–∞—è –ø–æ–¥—Ç–µ–º–∞"]
        keyboard = [[s] for s in subtopics]
        await update.message.reply_text(
            "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –ø–æ–¥—Ç–µ–º—É:",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )

    elif state == "sub":
        theme = user["theme"]
        valid_subs = TOPICS.get(theme, []) + ["–õ—é–±–∞—è –ø–æ–¥—Ç–µ–º–∞"]
        if text not in valid_subs:
            await update.message.reply_text("–í—ã–±–µ—Ä–∏ –ø–æ–¥—Ç–µ–º—É –∏–∑ —Å–ø–∏—Å–∫–∞.")
            return
        await update_user_sub(user_id, text)
        await update_user_state(user_id, "searching")
        await update.message.reply_text("üîé –ò—â—É —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞...")

        await add_to_queue(user_id, theme, text)

    elif state == "searching":
        await update.message.reply_text("‚è≥ –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞...")

    elif await is_in_chat(user_id):
        # –£–∂–µ –≤ —á–∞—Ç–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Å—ã–ª–∞–π
        await context.bot.send_message(chat_id=user["companion_id"], text=text)
    else:
        await update.message.reply_text("‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ù–∞–ø–∏—à–∏ /start.")



    if text == "–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥":
        await end_dialog(user_id, context)
        return

    elif text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        await update_user_state(user_id, "theme")
        keyboard = [[t] for t in TOPICS.keys()]
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–º—É:",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )
        return

    elif text == "–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç ‚ù§Ô∏è":
        await update.message.reply_text(
            "üôè –°–ø–∞—Å–∏–±–æ –∑–∞ –∂–µ–ª–∞–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç!\n(–ó–∞–≥–ª—É—à–∫–∞, –∑–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ–Ω–∞—Ç üí∏)"
        )
        return




