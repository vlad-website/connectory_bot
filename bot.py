# telegram_chat_bot/bot.py

import os
import logging
import traceback
from aiohttp import web
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    filters,
)
from config import BOT_TOKEN, WEBHOOK_URL, PORT
from db.init_db import init_db
from handlers.commands import start, choose_lang, register_handlers as register_commands_handlers
from handlers.messages import message_handler

from telegram.ext import CallbackQueryHandler
from handlers.messages import callback_query_handler

application.add_handler(CallbackQueryHandler(callback_query_handler))


# -------------------- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è --------------------
os.environ["PYTHONUNBUFFERED"] = "1"  # flush stdout

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.DEBUG,
    filename="bot.log",
    filemode="a",
)

logger = logging.getLogger("bot")
logger.setLevel(logging.DEBUG)

formatter = logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(message)s")
file_handler = logging.FileHandler("bot.log", mode="a")
file_handler.setFormatter(formatter)
console_handler = logging.StreamHandler()
console_handler.setFormatter(formatter)

logger.addHandler(file_handler)
logger.addHandler(console_handler)

# -------------------- –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è --------------------
application = ApplicationBuilder().token(BOT_TOKEN).build()

# -------------------- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ --------------------
# –ö–æ–º–∞–Ω–¥—ã –∏ callback'–∏ ‚Äî group 0 (–≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø–µ—Ä–≤—ã–º–∏)
application.add_handler(CommandHandler("start", start), group=0)
application.add_handler(CallbackQueryHandler(choose_lang, pattern=r"^lang_"), group=0)

# –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è register_handlers –¥–ª—è –∫–æ–º–∞–Ω–¥ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë —Ç–æ–∂–µ –≤ group=0
register_commands_handlers(application)

# –°–æ–æ–±—â–µ–Ω–∏—è ‚Äî group 1, —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –∏ –Ω–µ –∫–æ–º–∞–Ω–¥—ã
application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler), group=1)

# -------------------- –í–µ–±—Ö—É–∫ --------------------
async def handle_webhook(request):
    """
    –ü–æ–ª—É—á–∞–µ–º POST –æ—Ç Telegram, –ø–∞—Ä—Å–∏–º Update –∏ –ø–µ—Ä–µ–¥–∞—ë–º –≤ PTB.
    """
    from telegram import Update

    try:
        data = await request.json()
        logger.info("üì® RAW UPDATE: %s", data)

        update = Update.de_json(data, application.bot)
        summary = (
            f"id={update.update_id} "
            f"msg='{update.message.text if update.message else ''}' "
            f"callback='{update.callback_query.data if update.callback_query else ''}'"
        )
        logger.info("üîÑ Parsed update: %s", summary)

        await application.process_update(update)
        return web.Response(text="ok")

    except Exception:
        logger.exception("‚ùå Webhook handler crashed:\n%s", traceback.format_exc())
        return web.Response(status=500, text="error")


async def on_startup(app):
    await application.initialize()
    await init_db()  # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
    await application.start()
    if WEBHOOK_URL:
        await application.bot.set_webhook(WEBHOOK_URL)
        logger.info(f"Webhook set: {WEBHOOK_URL}")


async def on_cleanup(app):
    await application.stop()


# -------------------- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ --------------------
app = web.Application()
app.router.add_post(f"/{BOT_TOKEN}", handle_webhook)
app.on_startup.append(on_startup)
app.on_cleanup.append(on_cleanup)

# -------------------- –ó–∞–ø—É—Å–∫ --------------------
if __name__ == "__main__":
    PORT = int(os.environ.get("PORT", PORT))
    web.run_app(app, port=PORT)
